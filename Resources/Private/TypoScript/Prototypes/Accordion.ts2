prototype(Pure.NodeTypes:Accordion) < prototype(Pure.NodeTypes:Content) {
	node = ${node}

	attributes.class.accordion = 'accordion'
	attributes.data-accordion = ${q(node).property('accordionGroupName') ? q(node).property('accordionGroupName') : ''}

	accordionItems = TYPO3.TypoScript:Collection {
		collection = ${q(node).children('[instanceof Pure.NodeTypes:AccordionItem]')}
		itemRenderer = Pure.NodeTypes:AccordionItem
		itemName = 'node'
	}
}


prototype(Pure.NodeTypes:AccordionItem) < prototype(Pure.NodeTypes:Content) {
	templatePath = 'resource://Pure.NodeTypes/Private/Templates/NodeTypes/Accordion.html'
	sectionName = 'AccordionItem'

	# These attributes are added to li.accordion-navigation,
	# the parent element for div.content containing the accordion item content.
	extraAttributes.class {
		base = 'accordion-navigation'
		hideCcOverlay = 'neos-hide-empty-contentcollection-overlay'
		hideCcOverlay.@if.isBackend = ${node.context.workspace.name != 'live'}
	}

	# These attributes are added to div.content, which contains the accordion item content.
	# Note: it's a bit debatable if these should be applied to the div.content inside
	# the li.accordion-navigation or to the li.accordion-navigation itself, which is actually the
	# root element for accordion item. IMHO (ryzy) it makes more sense and it's more useful
	# to apply it for div.content element.
	attributes.id = ${q(node).property('customHtmlId') ? q(node).property('customHtmlId') : 'acc-'+q(node).property('_identifier')}
	attributes.class {
		contentcollection = 'neos-contentcollection'
		contentcollection.@if.isBackend = ${node.context.workspace.name != 'live'}
		base = 'content'
		active = ${q(node).property('isAccordionItemActive') ? 'active' : null}
	}
	@override.attributes = ${this.attributes}

	accordionItemId = ${this.attributes.id}

	accordionItemContent = TYPO3.TypoScript:Tag {
		# These attributes are added to div.content, which contains the accordion item content.
		attributes = ${attributes}
		content = TYPO3.Neos:ContentCollectionRenderer
		# Add additional wrapping, because otherwise createjs won't work (it requires elements of contentcollection to be direct children of contentcollection).
		# Can be removed when createjs is dropped.
		@process.contentElementWrapping = TYPO3.Neos:ContentElementWrapping
	}
}
