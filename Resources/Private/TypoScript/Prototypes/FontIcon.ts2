# Create separate TypoScript object which will be rendered inside another NodeType.
# It's done this way to avoid default TYPO3.Neos:Content behaviour in Neos backend
# (ie. we don't want there toolbar with add/remove icons etc as it would be misleading).
prototype(Pure.NodeTypes:FontIconAbstract) < prototype(TYPO3.TypoScript:Template) {
	templatePath = 'resource://Pure.NodeTypes/Private/Templates/NodeTypes/FontIcon.html'
	node = ${node}

	faName          = ${q(node).property('faName')}
	faOptions       = ${q(node).property('faOptions') ? String.trim(Array.join(q(node).property('faOptions'), ' ')) : null}
	faCustomCss     = ${q(node).property('faCustomCss')}
}

prototype(Pure.NodeTypes:FontIcon) < prototype(Pure.NodeTypes:FontIconAbstract) {
	@process.contentElementWrapping = TYPO3.Neos:ContentElementWrapping
	# This line prevents faOptions to be overridden by TS generated in generateNodeTypeDefinitions
	faOptions < prototype(Pure.NodeTypes:FontIconAbstract).faOptions
}
