prototype(Pure.NodeTypes:BlockGrid) < prototype(Pure.NodeTypes:Content) {
	templatePath = 'resource://Pure.NodeTypes/Private/Templates/NodeTypes/BlockGrid.html'
	node = ${node}
	attributes.class {
		contentcollection = 'neos-contentcollection'
		contentcollection.@if.isBackend = ${node.context.workspace.name != 'live'}
		itemsPerRow = ${q(node).property('classGridItemsPerRow') ? String.trim(Array.join(q(node).property('classGridItemsPerRow'), ' ')) : null}
	}
	@override.attributes = ${this.attributes}

	blockGridContent = TYPO3.TypoScript:Tag {
		tagName = 'ul'
		attributes = ${attributes}

		content = TYPO3.Neos:ContentCollectionRenderer {
			iterationName = 'iterator'
			itemName = 'node'
			itemRenderer = Pure.NodeTypes:BlockGridItem
		}

		# Add additional wrapping, because otherwise createjs won't work (it requires elements of contentcollection to be direct children of contentcollection).
		# Can be removed when createjs is dropped.
		@process.contentElementWrapping = TYPO3.Neos:ContentElementWrapping
	}

	@process.wrapRemover = Pure.Utils:WrapRemover
	@process.wrapRemover.wrapperClass = 'extra-wrapper-required-by-neos-backend'
}

prototype(Pure.NodeTypes:BlockGridItem) < prototype(TYPO3.TypoScript:Tag) {
	tagName = 'li'

	content = TYPO3.Neos:ContentCase

	prototype(TYPO3.Neos:Content) {
		# Remove contentElementWrapping, because wrapping was already added in BlockGridItem
		@process.contentElementWrapping >
	}
	@process.contentElementWrapping = TYPO3.Neos:ContentElementWrapping
}
